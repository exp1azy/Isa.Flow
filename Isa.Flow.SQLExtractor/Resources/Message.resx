<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActorInitialized" xml:space="preserve">
    <value>Актор готов (ID: {0}).          </value>
  </data>
  <data name="ActorInitializing" xml:space="preserve">
    <value>Инициализация актора...</value>
  </data>
  <data name="CleanAlreadyStarted" xml:space="preserve">
    <value>Очистка уже запущена.</value>
  </data>
  <data name="CleanStarted" xml:space="preserve">
    <value>Очистка запущена с {0} по {1}.</value>
  </data>
  <data name="CleanStopped" xml:space="preserve">
    <value>Очистка закончена.</value>
  </data>
  <data name="CleanStoppedWithError" xml:space="preserve">
    <value>Очистка прервана из-за ошибки.</value>
  </data>
  <data name="Cleared" xml:space="preserve">
    <value>Извлечено статей для очистки: {0}; диапазон ID: {1} ... {2}</value>
  </data>
  <data name="ConfigRead" xml:space="preserve">
    <value>Файл конфигурации прочитан.</value>
  </data>
  <data name="DefaultFuncParamsSet" xml:space="preserve">
    <value>Установлены параметры запуска по умолчанию.</value>
  </data>
  <data name="DeletedArticlesFuncStarted" xml:space="preserve">
    <value>Функция извлечения удаленных статей запущена.</value>
  </data>
  <data name="DeletedArticlesFuncStartError" xml:space="preserve">
    <value>Ошибка запуска функции извлечения удаленных статей.</value>
  </data>
  <data name="DeletedArticlesFuncStopped" xml:space="preserve">
    <value>Функция извлечения удаленных статей остановлена.</value>
  </data>
  <data name="DeletedArticlesFuncStoppedWithError" xml:space="preserve">
    <value>Функция извлечения удаленных статей остановлена из-за ошибки.</value>
  </data>
  <data name="DeletedExtracted" xml:space="preserve">
    <value>Извлечено удаленных статей: {0}; диапазон ID: {1} ... {2}</value>
  </data>
  <data name="ExitPrompt" xml:space="preserve">
    <value>Для выхода введите 'exit' или 'quit'.</value>
  </data>
  <data name="FailedReadingArticlesAttempt" xml:space="preserve">
    <value>Неудачная попытка чтения статей из БД. Причина: {0}</value>
  </data>
  <data name="FailedSendingArticleAttempt" xml:space="preserve">
    <value>Неудачная попытка отправки статьи в очередь. Причина: {0}</value>
  </data>
  <data name="FuncParamsFileRead" xml:space="preserve">
    <value>Файл параметров запуска прочитан.</value>
  </data>
  <data name="FuncParamsFileReadError" xml:space="preserve">
    <value>Ошибка чтения файла параметров запуска.</value>
  </data>
  <data name="FuncParamsFileSaveError" xml:space="preserve">
    <value>Ошибка записи параметров запуска в файл.</value>
  </data>
  <data name="LoggingConfigured" xml:space="preserve">
    <value>Логирование настроено.</value>
  </data>
  <data name="NewArticlesFuncStarted" xml:space="preserve">
    <value>Функция извлечения новых статей запущена.</value>
  </data>
  <data name="NewArticlesFuncStartError" xml:space="preserve">
    <value>Ошибка запуска функции извлечения новых статей.</value>
  </data>
  <data name="NewArticlesFuncStopped" xml:space="preserve">
    <value>Функция извлечения новых статей остановлена.</value>
  </data>
  <data name="NewArticlesFuncStoppedWithError" xml:space="preserve">
    <value>Функция извлечения новых статей остановлена из-за ошибки.</value>
  </data>
  <data name="NewExtracted" xml:space="preserve">
    <value>Извлечено новых статей: {0}; диапазон ID: {1} ... {2}</value>
  </data>
  <data name="QueueNameNotDefined" xml:space="preserve">
    <value>Имя очереди RabbitMQ не указано.</value>
  </data>
  <data name="ReindexAlreadyStarted" xml:space="preserve">
    <value>Реиндексация уже запущена.</value>
  </data>
  <data name="Reindexed" xml:space="preserve">
    <value>Извлечено статей для реиндексации: {0}; диапазон ID: {1} ... {2}</value>
  </data>
  <data name="ReindexStarted" xml:space="preserve">
    <value>Реиндексация запущена с {0} по {1}.</value>
  </data>
  <data name="ReindexStopped" xml:space="preserve">
    <value>Реиндексация закончена.</value>
  </data>
  <data name="ReindexStoppedWithError" xml:space="preserve">
    <value>Реиндексация прервана из-за ошибки.</value>
  </data>
  <data name="StartError" xml:space="preserve">
    <value>Ошибка при запуске приложения.</value>
  </data>
  <data name="UpdatedArticlesFuncStarted" xml:space="preserve">
    <value>Функция извлечения измененных статей запущена.</value>
  </data>
  <data name="UpdatedArticlesFuncStartError" xml:space="preserve">
    <value>Ошибка запуска функции извлечения измененных статей.</value>
  </data>
  <data name="UpdatedArticlesFuncStopped" xml:space="preserve">
    <value>Функция извлечения измененных статей остановлена.</value>
  </data>
  <data name="UpdatedArticlesFuncStoppedWithError" xml:space="preserve">
    <value>Функция извлечения измененных статей остановлена из-за ошибки.</value>
  </data>
  <data name="UpdatedExtracted" xml:space="preserve">
    <value>Извлечено измененных статей: {0}; диапазон ID: {1} ... {2}</value>
  </data>
</root>