//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Isa.Flow.Interact.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Error {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Error() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Isa.Flow.Interact.Resources.Error", typeof(Error).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An actor with the same ID is already started.
        /// </summary>
        internal static string ActorAlreadyStartedError {
            get {
                return ResourceManager.GetString("ActorAlreadyStartedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Actor ID cannot be null, empty or blank string.
        /// </summary>
        internal static string ActorIdCannotBeNullEmptyOrBlank {
            get {
                return ResourceManager.GetString("ActorIdCannotBeNullEmptyOrBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Actor info is required.
        /// </summary>
        internal static string ActorInfoRequired {
            get {
                return ResourceManager.GetString("ActorInfoRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Actor type cannot be null, empty or blank string.
        /// </summary>
        internal static string ActorTypeCannotBeNullEmptyOrBlank {
            get {
                return ResourceManager.GetString("ActorTypeCannotBeNullEmptyOrBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The number of concurrent customers is less than 1 or greater than 10.
        /// </summary>
        internal static string ConcurrentCustomersOutOfRange {
            get {
                return ResourceManager.GetString("ConcurrentCustomersOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection aborted.
        /// </summary>
        internal static string ConnectionAborted {
            get {
                return ResourceManager.GetString("ConnectionAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection сlosed.
        /// </summary>
        internal static string ConnectionClosed {
            get {
                return ResourceManager.GetString("ConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The range of identifiers is incorrect.
        /// </summary>
        internal static string FromToError {
            get {
                return ResourceManager.GetString("FromToError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid RPC request object.
        /// </summary>
        internal static string InvalidRpcRequest {
            get {
                return ResourceManager.GetString("InvalidRpcRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LastArticleId cannot be negative.
        /// </summary>
        internal static string LastArticleIdCannotBeNegative {
            get {
                return ResourceManager.GetString("LastArticleIdCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message nack error. Message rejected.
        /// </summary>
        internal static string MessageNackError {
            get {
                return ResourceManager.GetString("MessageNackError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message routing error. The most likely reason is the lack of a receiving queue.
        /// </summary>
        internal static string MessageRoutingError {
            get {
                return ResourceManager.GetString("MessageRoutingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Payload object is null.
        /// </summary>
        internal static string NullPayload {
            get {
                return ResourceManager.GetString("NullPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number can not be null, empty or blank.
        /// </summary>
        internal static string NumberCannotBeNullEmptyOrBlank {
            get {
                return ResourceManager.GetString("NumberCannotBeNullEmptyOrBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other actor with the same ID is launching.
        /// </summary>
        internal static string OtherActorWithTheSameIdLaunching {
            get {
                return ResourceManager.GetString("OtherActorWithTheSameIdLaunching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The payload type in the message does not match the declared one.
        /// </summary>
        internal static string PayloadTypeMismatch {
            get {
                return ResourceManager.GetString("PayloadTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Queue name can not be null, empty or blank.
        /// </summary>
        internal static string QueueNameCannotBeNullEmptyOrBlank {
            get {
                return ResourceManager.GetString("QueueNameCannotBeNullEmptyOrBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot use such a queue name, because it is reserved for internal needs.
        /// </summary>
        internal static string QueueNameError {
            get {
                return ResourceManager.GetString("QueueNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rpc handling error.
        /// </summary>
        internal static string RpcHandlingError {
            get {
                return ResourceManager.GetString("RpcHandlingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error occured while message sending.
        /// </summary>
        internal static string SendingError {
            get {
                return ResourceManager.GetString("SendingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Serializing error.
        /// </summary>
        internal static string SerializingError {
            get {
                return ResourceManager.GetString("SerializingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error occured while message subscription.
        /// </summary>
        internal static string SubscriptionError {
            get {
                return ResourceManager.GetString("SubscriptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The specified function does not meet the requirements: New, Updated or Deleted.
        /// </summary>
        internal static string UnknownSqlExtractionFunc {
            get {
                return ResourceManager.GetString("UnknownSqlExtractionFunc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The specified function does not meet the requirements: Reindex or Clean.
        /// </summary>
        internal static string UnknownSqlExtractionIntervalFunc {
            get {
                return ResourceManager.GetString("UnknownSqlExtractionIntervalFunc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown validation error.
        /// </summary>
        internal static string UnknownValidationError {
            get {
                return ResourceManager.GetString("UnknownValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Verification code can not be null, empty or blank.
        /// </summary>
        internal static string VerificationCodeCannotBeNullEmptyOrBlank {
            get {
                return ResourceManager.GetString("VerificationCodeCannotBeNullEmptyOrBlank", resourceCulture);
            }
        }
    }
}
